#!/bin/bash
# DESCRIPTION: Wrapper script for running mmlong2-lite Snakemake workflow
# AUTHOR: Mantas Sereika (mase@bio.aau.dk)
# LICENSE: GNU General Public License

# Pre-set default settings
set -eo pipefail
script=$(dirname $(which snakemake))
config=$script/mmlong2-lite-config.yaml
snakefile=$script/mmlong2-lite.smk
sing=$script/sing-mmlong2-lite
version=$(grep version $config | cut -d" " -f2 | tr -d '\r')
mode=$(grep mode $config | cut -d" " -f2 | tr -d '\r')
fastq=$(grep fastq $config | cut -d" " -f2 | tr -d '\r')
sample=$(grep sample $config | cut -d" " -f2 | tr -d '\r')
proc=$(grep proc $config | cut -d" " -f2 | tr -d '\r')
cov=$(grep reads_diffcov $config | cut -d" " -f2 | tr -d '\r')
flye_min_ovlp=$(grep flye_ovlp $config | cut -d" " -f2 | tr -d '\r')
flye_min_cov=$(grep flye_cov $config | cut -d" " -f2 | tr -d '\r')
medak_mod_pol=$(grep medak_mod_pol $config | cut -d" " -f2 | tr -d '\r')
min_contig_len=$(grep min_contig_len $config | cut -d" " -f2 | tr -d '\r')
min_mag_len=$(grep min_mag_len $config | cut -d" " -f2 | tr -d '\r')
semibin_mod=$(grep semibin_mod $config | cut -d" " -f2 | tr -d '\r')
extra=""
tmp=$(pwd)

# Usage instructions for terminal interface
usage_text="
mmlong2-lite: a workflow for microbial genome recovery using long reads
For issues or feedback please use https://github.com/Serka-M/mmlong2-lite/issues or e-mail to mase@bio.aau.dk 

MAIN INPUTS:
-np	--nanopore_reads	Path to Nanopore reads (default: $fastq)
-pb	--pacbio_reads		Path to PacBio HiFi reads (default: $fastq)
-o	--output_dir		Output directory name (default: $sample)
-p	--processes		Number of processes/multi-threading (default: $proc)
-cov 	--coverage		CSV dataframe for differential coverage binning (e.g. NP/PB/IL,/path/to/reads.fastq)
 
ADDITIONAL INPUTS:
-tmp	--temporary_dir		Directory for temporary files (default: none)
-med	--medaka_model		Medaka polishing model (default: $medak_mod_pol)
-sem	--semibin_model		Binning model for SemiBin (default: $semibin_mod)
-fmo	--flye_min_ovlp		Minimum overlap between reads used by Flye assembler (default: auto)
-fmc	--flye_min_cov		Minimum initial contig coverage used by Flye assembler (default: $flye_min_cov)
-mlc	--min_len_contig	Minimum assembly contig length (default: $min_contig_len)
-mlb	--min_len_bin		Minimum genomic bin size (default: $min_mag_len)
-x	--extra_inputs		Extra inputs for Snakemake workflow (default: none)

MISCELLANEOUS INPUTS:
-h	--help			Print help information
-v	--version		Print workflow version number

"

# Assign inputs
while test $# -gt 0; do
           case "$1" in
                -h | --help) printf -- "$usage_text"; exit 1;;
                -v | --version) printf -- "mmlong2-lite, version $version\n"; exit 1;;
                -np | --nanopore_reads) shift; fastq=$1 && mode="Nanopore-simplex"; shift;;
                -pb | --pacbio_reads) shift; fastq=$1 && mode="PacBio-HiFi"; shift;;
                -o | --output_dir) shift; sample=$1; shift;;
                -p | --processes) shift; proc=$1; shift;;
                -cov | --coverage) shift; cov=$1; shift;;
                -tmp | --temporary_dir) shift; tmp=$1; shift;;
                -fmo | --flye_min_ovlp) shift; flye_min_ovlp=$1; shift;;
                -fmc | --flye_min_cov) shift; flye_min_cov=$1; shift;;
                -med | --medaka_model) shift; medak_mod_pol=$1; shift;;				
                -mlc | --min_len_contig) shift; min_contig_len=$1; shift;;
                -mlb | --min_len_bin) shift; min_mag_len=$1; shift;;
                -sem | --semibin_model) shift; semibin_mod=$1; shift;;		
                -x | --extra_inputs) shift; extra=$1; shift;;				
                *)
                   printf "ERROR: $1 is not a recognized input! \nType --help for more information on workflow usage.\n"
                   exit 1;
                   ;;
          esac
  done  

# Basic checks
if [ $fastq == "none" ]; then printf -- "$usage_text" && echo "ERROR: Sequencing reads not provided" && exit 1; fi
if [ ! -f $fastq ]; then printf -- "$usage_text" && echo "ERROR: Provided sequencing read file not found" && exit 1; fi
if [ ! $cov == "none" ] && [ ! -f $cov ]; then printf -- "$usage_text" && echo "ERROR: Provided dataframe for differential coverage binning not found" && exit 1; fi
bytes_left="$(df --output=avail -B 1 "$(pwd)" | tail -n 1)" && gigabytes_left=$(($bytes_left/1024**3))
if [ $gigabytes_left -lt 100 ]; then  echo "ERROR: Less than 100 GB of free space left in working directory" && exit 1; else echo "$gigabytes_left GB of free space available in working directory"; fi
if ! command -v snakemake &> /dev/null; then echo "ERROR: Dependency (((snakemake))) could not be found" && exit 1; fi
if ! command -v singularity &> /dev/null; then echo "ERROR: Dependency (((singularity))) could not be found" && exit 1; fi
if ! command -v dirname &> /dev/null; then echo "ERROR: Dependency (((dirname))) could not be found" && exit 1; fi

# Configure input paths
if [[ "$sample" = /* ]]; then sample="$(basename $sample)"; fi
if [[ ! "$fastq" = /* ]]; then fastq="$(pwd)/$fastq"; fi
if [[ ! "$tmp" = /* ]]; then tmp="$(pwd)/$tmp"; fi
export TMPDIR=$tmp

# Configure Singularity bindings
singularity_binds="-B $(pwd) -B $TMPDIR -B $(dirname $fastq) "
if [ ! $cov == "none" ]; then singularity_binds=$(echo "$singularity_binds -B $(dirname $cov)"); fi
if [ ! $cov == "none" ]; then while read line || [ -n "$line" ]; do
	type="$(echo $line | cut -f1 -d",")"
	reads="$(echo $line | cut -f2 -d",")"
	if [[ ! -f "$reads" ]]; then printf "ERROR: provided read file for differential coverage binning not found \n$reads\n" && exit 1; fi;
	if [[ ! "$type" = "PB" ]] && [[ ! "$type" = "IL" ]] && [[ ! "$type" = "NP" ]]; then printf "ERROR: unrecognised read type for differential coverage binning\n $type with $reads\n" && exit 1; fi;
	singularity_binds=$(echo "$singularity_binds -B $(dirname $reads)")
done < $cov; fi;

# Run snakemake workflow
echo "Starting Snakemake workflow for $mode reads and $proc multi-threading instances..."
snakemake --use-singularity --use-conda --singularity-args "$singularity_binds" --cores 1 --nolock -s $snakefile --configfile $config --config sing=$sing sample=$sample fastq=$fastq proc=$proc mode=$mode reads_diffcov=$cov flye_ovlp=$flye_min_ovlp flye_cov=$flye_min_cov medak_mod_pol=$medak_mod_pol min_contig_len=$min_contig_len min_mag_len=$min_mag_len semibin_mod=$semibin_mod $extra
exit 0
